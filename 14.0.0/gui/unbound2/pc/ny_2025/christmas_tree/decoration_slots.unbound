(def constant DEFAULT_DECORATION_ITEM_ALPHA 0.45)

(def constant DECORATION_ITEM_SIZE 64)
(def constant DECORATION_ITEM_BG_DEFAULT 0xFFFFFFFF)

(def constant DECORATION_PICKER_ITEM_SIZE 58)
(def constant DECORATION_PICKER_ITEM_ANIMATION 0.15)
(def constant DECORATION_PICKER_ITEM_BG_DEFAULT 0xFFFFFFFF)

(def constant DECORATION_ITEM_ALPHA_DEFAULT 0)
(def constant DECORATION_ITEM_ALPHA_HOVERED 0.05)
(def constant DECORATION_ITEM_ALPHA_PRESSED 0.1)

(def constant DECORATION_PICKER_TOOLTIP_SIZE_BY_TYPE {	'toy':		300,
														'garland':	370,
														'pommel':	300,
														'gift':		230 })

(def macro PULL_DECORATION_INFO(_decorationId:expression)
	(var decorationEntity:gfx = "$datahub.getPrimaryEntity(CC.newYearDecoration, _decorationId)")

	
	(var decorationComponent:gfx = "decorationEntity ? decorationEntity.newYearDecoration : null" (event "decorationEntity.evUpdated"))

	(var decorationId:number = "decorationComponent ? decorationComponent.id : null" (event "decorationComponent.evChanged"))
	(var decorationType:str = "decorationComponent ? decorationComponent.type : ''" (event "decorationComponent.evChanged"))
	(var decorationIsOwned:str = "decorationComponent ? decorationComponent.isOwned : false" (event "decorationComponent.evChanged"))

	(var decorationTitle:str = "decorationComponent ? decorationComponent.title : null" (event "decorationComponent.evChanged"))
	(var decorationDescription:str = "decorationComponent ? decorationComponent.description : null" (event "decorationComponent.evChanged"))
	(var decorationImagePaths:dict = "decorationComponent ? decorationComponent.iconPaths : null" (event "decorationComponent.evChanged"))

	(var decorationSmallImagePath:str = "decorationImagePaths ? decorationImagePaths.small : null" (event "decorationComponent.evChanged"))
	(var decorationLargeImagePath:str = "decorationImagePaths ? decorationImagePaths.large : null" (event "decorationComponent.evChanged"))

	
	(var countComponent:gfx = "decorationEntity ? decorationEntity.countComponent : null" (event "decorationEntity.evUpdated"))
	(var decorationCount:number = "countComponent ? countComponent.value : 0" (event "countComponent.evUpdate"))

	
	(var isNew:bool = "decorationEntity ? decorationEntity.hasComponent(CC.newItem) : false" (event "decorationEntity.evAdded") (event "decorationEntity.evRemoved"))
)

(def macro PULL_DECORATION_SLOT_INFO (_slotIndex:expression)
	(var decorationSlotEntity:gfx = "$datahub.getPrimaryEntity(CC.newYearDecorationSlot, _slotIndex)")

	(var decorationSlotComponent:gfx = "decorationSlotEntity ? decorationSlotEntity.newYearDecorationSlot : null" (event "decorationSlotEntity.evUpdated"))

	(var slotIndex:number = "decorationSlotComponent ? decorationSlotComponent.index : null" (event "decorationSlotComponent.evChanged"))
	(var slotType:str = "decorationSlotComponent ? decorationSlotComponent.type : ''" (event "decorationSlotComponent.evChanged"))
	(var installedSlotDecorationId:number = "decorationSlotComponent ? decorationSlotComponent.decorationId : null" (event "decorationSlotComponent.evChanged"))
	(var isDecorationAvailable:bool = "decorationSlotComponent ? decorationSlotComponent.isAvailable : false" (event "decorationSlotComponent.evChanged"))
	(var slotDecorationImagePath:str = "decorationSlotComponent ? decorationSlotComponent.iconPath : null" (event "decorationSlotComponent.evChanged"))
)

(def element DecorationSlotsContainer() layout=true
	(scope
		(macro GET_PREF 'isBlurOptionEnabled' "'graphics.GUI.blur'")
		(macro GET_PREF 'isUIContrastOptionEnabled' "'graphics.GUI.contrast'")

		(var isHighContrast:bool = "isUIContrastOptionEnabled || !isBlurOptionEnabled")
	)

	(element BlurPanelContainer
		_alpha = 0.24

		
		(block
			(style
				(paddingTop = "SXS") (paddingBottom = "SXS")
				(paddingLeft = "MS") (paddingRight = "MS")
				(flow = "horizontal") (gap = "XL")
			)

			(controller $Repeat renderer='DecorationSlotsGroup'
				(bind count "SC.Common.NY_DECORATION_SLOT_POSITION.ALL.length")
				(args
					_position = "SC.Common.NY_DECORATION_SLOT_POSITION.ALL[$index]"
				)
			)
		)
	)

)

(def element DecorationSlotsGroup (_position:str) layout=true
	(scope
		(var decorationSlotsCollection:gfx = "$datahub.getCollection(CC.newYearDecorationSlot).getChildByPath('byPositions.' + _position)")
		(var decorationSlotsArray:array = "decorationSlotsCollection ? decorationSlotsCollection.items : []" (event "decorationSlotsCollection.evUpdated"))
		(var stageComponent:gfx = "$datahub.getSingleEntity(CC.stage).stage")
		(var stageWidth:number = "stageComponent.width" (event "stageComponent.evStageSizeChanged"))
	)

	(style (flow = "horizontal") (gap = "MS"))

	(controller $Repeat renderer='DecorationSlot'
		(bind count "decorationSlotsArray.length")
		(args
			_decorationSlotEntity = "decorationSlotsArray[$index]"
			_position = "_position"
		)
	)

	(block
			(style (position = "absolute"))
			(controller $Instance renderer = 'GuidingTipHub'
				(bind enabled "$index == 0")
				(args
					_tipId = "SC.Context_guiding_tip.TIP_TYPE.CHRISTMAS_TREE_DECORATION_INSTALL"
					_tipPositioning = "TIP_POSITION_TOP"
					_oppositeDirectionOffset = "120"
					_offset = "SXS"
					_pointerOffset = "30"
					_pinOffset = "stageWidth > 1336 ? 0 : stageWidth < 1310 ?  47.5 : 50"
				)
			)
	)
)

(def element DecorationSlot(_decorationSlotEntity:gfx, _position:str) layout=true
	(scope
		(macro MOUSE_HANDLER_SCOPE "'DecorationSlot_'")

		(macro PULL_DECORATION_SLOT_INFO "_decorationSlotEntity.newYearDecorationSlot.index") 
		(macro PULL_DECORATION_INFO "installedSlotDecorationId") 

		(var statEvent:str = "'ub2:ny25_tree_slot_' + (slotIndex ? slotIndex : 'null')")

		
		(var isDecorationSetted:bool = "installedSlotDecorationId != null && installedSlotDecorationId != 0")
		(var isIdle:bool = "!isDecorationAvailable && !isDecorationSetted")

		
		(var borderAlpha:number = "isDecorationAvailable ? 1 : DEFAULT_DECORATION_ITEM_ALPHA")
		(var iconAlpha:number = "isIdle ? DEFAULT_DECORATION_ITEM_ALPHA : 1")

		
		(var borderImagePath:str ="isDecorationAvailable	? 'url:../service_kit/frames/one_pixel_frame.png'
															: 'url:../service_kit/frames/64px_not_empty_field.png'")
	)

	(bindcall externalCall "'inputMapping.onAction'" "['deactivateTipChain', { tip_chain_id: SC.Context_guiding_tip.TIP_CHAIN_ID.CHRISTMAS_TREE }]"
																												init=false
																												watch=false
																												on='click')

	(bindcall externalCall "'direct.action'"	"[SC.Common.STATISTICS_EVENTS.LOG, [statEvent]]" init=false
																								watch=false
																								on='click')

	
	(controller $Tooltip
		(bind renderer "'DecorationPickerTooltip'")
		(args
			_slotIndex="slotIndex"
		)
		(macro VERTICAL_INFOTIP_BEHAVIOUR "0")
		(offset = {	x: 0, y: 30 })

		(pinOffset=1)
		(pinBottom='InfotipPinBottom')
	)

	
	(controller $Tooltip
		(bind enabled "isDecorationAvailable || isIdle")
		(bind renderer "'EmptyDecorationSlotTooltip'")
		(args
			_isDecorationAvailable = "isDecorationAvailable"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
		(align = "top|right")
	)

	
	(controller $Tooltip
		(bind enabled "isDecorationSetted")
		(bind renderer "'DecorationTooltip'")
		(args
			_decorationId = "decorationId"
			_instructionText = 'IDS_CHRISTMAS_TREE_DECORATION_TOOLTIP_INSTRUCTION_CHANGE'
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
		(align = "top|right")
	)

	
	(block
		(style
			(align = "center|middle")

			(width = "DECORATION_ITEM_SIZE")
			(height = "DECORATION_ITEM_SIZE")
		)

		
		(block
			(class $FullsizeAbsolute)
			(style
				(hitTest = false)
				(alpha = "DECORATION_ITEM_ALPHA_DEFAULT")
				(backgroundColor = "DECORATION_ITEM_BG_DEFAULT")
			)

			(controller $Animation
				(bindcall play  duration="DECORATION_PICKER_ITEM_ANIMATION"
								action="kill"
								from="{ alpha: DECORATION_ITEM_ALPHA_DEFAULT }"
								to="{ alpha: DECORATION_ITEM_ALPHA_HOVERED }"
								watch=false
								reverse="!DecorationSlot_rollOver"
								(bind trigger "DecorationSlot_rollOver")
				)
				(bindcall play  duration="DECORATION_PICKER_ITEM_ANIMATION"
								action="kill"
								from="{ alpha: DECORATION_ITEM_ALPHA_HOVERED }"
								to="{ alpha: DECORATION_ITEM_ALPHA_PRESSED }"
								watch=false
								reverse="!DecorationSlot_mouseDown"
								(bind trigger "DecorationSlot_mouseDown")
				)
			)
		)

		
		(block
			(class $FullsizeAbsolute)

			(style
				(bind alpha "borderAlpha")

				(hitTest = false)

				(backgroundSize = "fill")
				(bind backgroundImage "borderImagePath")
				(bind scale9grid "isDecorationAvailable ? 2 : null")
			)

			(bind colorTransform "isDecorationAvailable ? COLOR_TRANSFORM_WHITE_TO_YELLOW : {}")
		)

		
		(block
			(style
				(bind alpha "iconAlpha")
				(hitTest = false)

				(width = "DECORATION_PICKER_ITEM_SIZE")
				(height = "DECORATION_PICKER_ITEM_SIZE")

				(backgroundSize = "fill")
				(bind backgroundImage "slotDecorationImagePath")
			)
		)
	)

	(macro MOUSE_HANDLER
		_prefix = "'DecorationSlot_'"
		_soundSet = "toLower('button_ny_tree_'+slotType)"
	)

	(bindcall externalCall "'inputMapping.onRequest'" "['setCameraPositionFromNYPort', { position: _position }]"	init=false
																													watch=false
																													on='click')
)



(def element DecorationPickerTooltip(_slotIndex:number) layout=true
	(scope
		(macro PULL_DECORATION_SLOT_INFO "_slotIndex") 

		
		(var decorationsCollection:gfx = "$datahub.getCollection(CC.newYearDecoration).getChildByPath('allDecorationsByTypes.' + slotType)")
		(var decorationsByTypeArray:array = "decorationsCollection ? decorationsCollection.items : []" (event "decorationsCollection.evUpdated"))
	)

	(style
		(bind width "DECORATION_PICKER_TOOLTIP_SIZE_BY_TYPE[slotType]")
	)

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND _isInfotip="true")

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(style
			(flow = "tile_horizontal")
			(gap = "SXS")
		)

		(controller $Repeat renderer='DecorationPickerItem'
			(bind count "decorationsByTypeArray.length")
			(args
				_slotIndex = "_slotIndex"
				_decorationEntity = "decorationsByTypeArray[$index]"
			)
		)
	)
)

(def element DecorationPickerItem (_decorationEntity:gfx, _slotIndex:number) layout=true
	(scope
		(event evStartShow)
		(event evStartHide)

		(macro MOUSE_HANDLER_SCOPE "'DecorationPickerItem_'")

		(macro PULL_DECORATION_INFO "_decorationEntity.newYearDecoration.id") 
		(macro PULL_DECORATION_SLOT_INFO "_slotIndex") 

		(var isOnStage:bool = "true")
		(bind isOnStage "true" init=false watch=false (event "evStartShow"))
		(bind isOnStage "false" init=false watch=false (event "evStartHide"))

		
		(var isInstalled:bool = "installedSlotDecorationId == decorationId")

		
		(var decorationAction:str = "decorationIsOwned && (isInstalled || decorationCount) ? 'setDecorationToSlot' : ''")
		(var decorationActionParams:dict = "{ decorationId: isInstalled ? 0 : decorationId, slotIndex: slotIndex }")
		(var itemSoundSet:str = "decorationAction != '' ? 'button_ny_tree_select' : 'button_ny_tree_toy_empty'")
	)

	(style
		(align = "center|middle")

		(width = "DECORATION_PICKER_ITEM_SIZE")
		(height = "DECORATION_PICKER_ITEM_SIZE")
	)

	
	(controller $Tooltip
		(bind enabled "decorationIsOwned && isOnStage")
		(bind renderer "'DecorationTooltip'")
		(args
			_decorationId = "decorationId"
			_isCountEqualZero = "!decorationCount"
			_instructionText = "isInstalled			? 'IDS_CHRISTMAS_TREE_DECORATION_TOOLTIP_INSTRUCTION_REMOVE' :
								decorationCount		? 'IDS_CHRISTMAS_TREE_DECORATION_TOOLTIP_INSTRUCTION_HANG'
													: null"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
		(align = "top|right")
	)

	
	(controller $Tooltip
		(bind enabled "!decorationIsOwned && isOnStage")
		(bind renderer "'SimpleStatusTooltip'")
		(args
			_text = "'IDS_CHRISTMAS_TREE_EMPTY_DECORATION_TOOLTIP'"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
		(align = "top|right")
	)

	
	(block
		(class $FullsizeAbsolute)
		(style
			(hitTest = false)
			(alpha = "DECORATION_ITEM_ALPHA_DEFAULT")
			(backgroundColor = "DECORATION_PICKER_ITEM_BG_DEFAULT")
		)

		(controller $Animation
			(bindcall play  duration="DECORATION_PICKER_ITEM_ANIMATION"
							action="kill"
							from="{ alpha: DECORATION_ITEM_ALPHA_DEFAULT }"
							to="{ alpha: DECORATION_ITEM_ALPHA_HOVERED }"
							watch=false
							reverse="!DecorationPickerItem_rollOver"
							(bind trigger "DecorationPickerItem_rollOver")
			)
			(bindcall play  duration="DECORATION_PICKER_ITEM_ANIMATION"
							action="kill"
							from="{ alpha: DECORATION_ITEM_ALPHA_HOVERED }"
							to="{ alpha: DECORATION_ITEM_ALPHA_PRESSED }"
							watch=false
							reverse="!DecorationPickerItem_mouseDown"
							(bind trigger "DecorationPickerItem_mouseDown")
			)
		)
	)

	
	(block
		(bind visible "isInstalled")

		(class $FullsizeAbsolute)
		(style
			(hitTest = false)

			(backgroundSize = "fill")
			(backgroundImage = "'url:../service_kit/frames/one_pixel_frame.png'")
			(scale9grid = 2)
		)

		(bind colorTransform "COLOR_TRANSFORM_WHITE_TO_YELLOW")
	)

	
	(block
		(style
			(width = 100%) (height = 100%)

			(hitTest = false)
			(backgroundSize = "fill")
			(bind backgroundImage "decorationSmallImagePath")
		)
	)

	
	(block
		(style (position = "absolute") (left = 1px) (top = 1px))

		(block
			(macro DEFAULT_CONTROL_MARKER_ANIMATION "isNew")

			(style
				(bind alpha "isNew ? 1 : 0" watch=false)
			)

			(element MarkerNew)
		)
	)

	
	(block
		(bind visible "decorationIsOwned")

		(class $FullsizeAbsolute)
		(style
			(hitTest = false)
			(padding = 1px) (align = "bottom|right")
		)

		(element ImageItemsCounter
			_amount = "decorationCount"
		)
	)

	(macro MOUSE_HANDLER
		_prefix = "'DecorationPickerItem_'"
	)

	(bindcall externalCall 'sound.playSetSoundDirect' "[itemSoundSet, SoundEvent.OVER]" init=false watch=false (event "DecorationPickerItem_evRollOver"))
	(bindcall externalCall 'sound.playSetSoundDirect' "[itemSoundSet, SoundEvent.CLICK]" init=false watch=false on='click')

	(dispatch evStartShow args="{}" init=false on='addedToStage')
	(dispatch evStartHide args="{}" init=false on='removedFromStage')

	(bindcall externalCall "'inputMapping.onAction'" "[decorationAction, decorationActionParams]" 	init=false
																									watch=false
																									on='click')


	(bindcall externalCall "isNew ? 'inputMapping.onAction' : ''" "['makeSeen', {entityId: decorationEntity.id}]" 	init=false
																													watch=false
																													on='click')

	(bindcall externalCall "isNew ? 'inputMapping.onAction' : ''" "['makeSeen', {entityId: decorationEntity.id}]" 	init=false
																													watch=false
																													on='removedFromStage')
)



(def element DecorationTooltip (_decorationId:number, _instructionText:str = null, _isCountEqualZero:bool = false) layout=true dispatch_size_change=true
	(scope
		(macro PULL_DECORATION_INFO "_decorationId") 
	)

	(style (hitTest = false))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER _width = "340px"
		(element TooltipSystemHeaderWithIconAndText
			_imageUrl="decorationLargeImagePath"
			_headerIconType="SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.SIMPLE"
			_imageWidth="60"
			_imageHeight="60"
			_unifiedStatus="SC.Ui_styles.UNIFIED_STATUS.DEFAULT"
			_headerText="decorationTitle"
			_subheaderText="decorationDescription"
		)

		(block
			(bind visible "_isCountEqualZero")
			(style (width = 100%))

			(element TooltipSystemHorizontalDivider)

			(tf
				(class $TextDefaultNM)
				(style (alpha = "TC") (width = 100%))
				(text = 'IDS_CHRISTMAS_TREE_DECORATION_TOOLTIP_IS_COUNT_EQUAL_ZERO')
			)
		)

		(block
			(bind visible "_instructionText != null")
			(style (width = 100%))

			(element TooltipSystemHorizontalDivider)

			(element TooltipSystemStatusLine
				_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
				_text = "_instructionText"
			)
		)
	)
)

(def element EmptyDecorationSlotTooltip (_isDecorationAvailable:bool)
	(scope
		(var type:str = "_isDecorationAvailable ? 'DECORATION_AVAILABLE'
												: 'EARN_DECORATION'")

		(var titleText:str = "'IDS_CHRISTMAS_TREE_' + type + '_TOOLTIP_TITLE'")
		(var descriptionText:str = "'IDS_CHRISTMAS_TREE_' + type + '_TOOLTIP_DESCRIPTION'")
	)

	(style (hitTest = false))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER _width = "340px"
		(element TooltipSystemHeaderSubheaderText
			_headerText = "titleText"
		)

		(element TooltipSystemHorizontalDivider)

		(tf
			(class $TextDefaultNM)
			(style (alpha = "TC") (width = 100%))
			(bind text "descriptionText")
		)

		(element TooltipSystemHorizontalDivider)

		(element TooltipSystemStatusLine
			_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
			_text = "'IDS_CHRISTMAS_TREE_DECORATION_SLOT_TOOLTIP_INSTRUCTION'"
		)
	)
)
